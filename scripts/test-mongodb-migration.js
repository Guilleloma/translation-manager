/**
 * Script para probar la migraci√≥n de datos a MongoDB
 * 
 * Uso:
 * - Ejecutar: node scripts/test-mongodb-migration.js
 * - Opciones:
 *   - check: Verificar el estado de la migraci√≥n
 *   - migrate: Migrar datos a MongoDB
 *   - clear: Limpiar todos los datos
 * 
 * Ejemplo:
 *   node scripts/test-mongodb-migration.js migrate
 */

// Importar las funciones necesarias
require('dotenv').config();
const { 
  migrateAllSeedDataToMongoDB, 
  checkMigrationStatus, 
  clearAllMongoDBData 
} = require('../dist/services/seedMigration');

// Funci√≥n para manejar errores
const handleError = (error) => {
  console.error('\n‚ùå Error:', error.message);
  console.error('Stack:', error.stack);
  process.exit(1);
};

// Funci√≥n principal
async function main() {
  const command = process.argv[2] || 'check';
  
  try {
    console.log('üîÑ Ejecutando comando:', command);
    
    switch (command) {
      case 'check':
        console.log('üìä Verificando estado de la migraci√≥n...');
        const status = await checkMigrationStatus();
        console.log('\nEstado actual:');
        console.log('- Usuarios:', status.usersCount);
        console.log('- Copys:', status.copysCount);
        console.log('- Migraci√≥n completa:', status.isComplete ? 'S√≠ ‚úÖ' : 'No ‚ùå');
        break;
        
      case 'migrate':
        console.log('üöÄ Iniciando migraci√≥n de datos...');
        await migrateAllSeedDataToMongoDB();
        console.log('\n‚úÖ Migraci√≥n completada');
        
        // Verificar el estado despu√©s de la migraci√≥n
        const migrationStatus = await checkMigrationStatus();
        console.log('\nEstado despu√©s de la migraci√≥n:');
        console.log('- Usuarios:', migrationStatus.usersCount);
        console.log('- Copys:', migrationStatus.copysCount);
        console.log('- Migraci√≥n completa:', migrationStatus.isComplete ? 'S√≠ ‚úÖ' : 'No ‚ùå');
        break;
        
      case 'clear':
        console.log('üßπ Limpiando todos los datos...');
        await clearAllMongoDBData();
        console.log('\n‚úÖ Datos eliminados correctamente');
        break;
        
      default:
        console.error('‚ùå Comando no reconocido. Opciones v√°lidas: check, migrate, clear');
        process.exit(1);
    }
    
    process.exit(0);
  } catch (error) {
    handleError(error);
  }
}

// Ejecutar la funci√≥n principal
main();
